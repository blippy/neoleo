#!/usr/bin/env perl
use v5.010; 
use Getopt::Long;

my $prefix = "/usr/local";
GetOptions("prefix=s" => \$prefix);


mkdir "build";

open(FH, '>', "Makefile") or die $!;


print FH "# autogenerated by config.pl. Do not modify\n";
print FH "PREFIX ?= $prefix\n";

my $top = <<'EOM';

CXX ?= g++
CXXFLAGS =  -std=gnu++23 -Wall -fmodules
CXXFLAGS += -ggdb -O0
#CXXFLAGS += -Wfatal-errors
VPATH = src
STD = gcm.cache/std.gcm

.DEFAULT_GOAL = neoleo

$(STD) : # build the std module
	#-mkdir build
	$(CXX) $(CXXFLAGS) -c -fsearch-include-path bits/std.cc


info :
	@echo "CC_OBJS = $(CC_OBJS)"
	@echo "CXX_OBJS = $(CXX_OBJS)"
	@echo "PREFIX:$(PREFIX)"
        
clean :
	rm -f build/*.o  neoleo
        
cleaner : clean
	find gcm.cache/*.gcm ! -name std.gcm -delete # delete everything in gcm.cach except std.gcm
        
install : neoleo
	install -p neoleo $(PREFIX)/bin 
        
uninstall : 
	rm -f $(PREFIX)/bin/neoleo 

check :
	./run-tests.pl

EOM

print FH $top;

my @objs;


while (<DATA>) {
	chomp($_);
	my @deps = split /\s+/,$_;
	my $targ = shift(@deps);
	#my $dep1 = shift(@deps);
	#my ($dep1, @rst) = @deps;
	print FH "build/$targ.o : src/$targ";
	push(@objs, "build/$targ.o"); 
	foreach (@deps) {
		print FH " build/$_.o";
	}
	print FH " neotypes.h";
	print FH "\n";
	print FH "\t" . '$(CXX) $(CXXFLAGS) -c $< -o $@' . "\n\n";
	#my $trg = @_[1]; 
	#say "$trg ";
}


print FH  "neoleo :  @objs\n";
print FH "\t" . '$(CXX) $^  -o $@ -lncursesw -lpanel -lform' . "\n";




#my $tail = <<'EOM';
#EOM
#print FH $tail;
close(FH);

__DATA__
basic.cc errors.cxx logging.cxx
cell.cc value.cxx
errors.cxx
io-2019.cc errors.cxx logging.cxx win.cxx
io-curses.cc errors.cxx logging.cxx win.cxx
io-headless.cc logging.cxx mod.cxx
io-utils.cc errors.cxx logging.cxx value.cxx
logging.cxx
main.cc logging.cxx
mod.cxx
menu-2025.cc logging.cxx
oleofile.cc errors.cxx
parser-2019.cc errors.cxx value.cxx
regions.cc
sheet.cc
spans.cc logging.cxx
tests.cc
utils.cc value.cxx
value.cxx errors.cxx
win.cxx
