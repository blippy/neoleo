#!/usr/bin/env perl
use v5.010; 

open(FH, '>', "Makefile") or die $!;


#common is *h errors.cxx logging.cxx
my $top = <<'EOM';
# autogenerated by config.pl. Do not modify
PREFIX ?= /usr/local

CXX ?= g++
CXXFLAGS =  -std=gnu++23 -Wall -fmodules
CXXFLAGS += -ggdb -O0
VPATH = src
STD = gcm.cache/std.gcm

.DEAFULT = neoleo

info :
        @echo "CC_OBJS = $(CC_OBJS)"
        @echo "CXX_OBJS = $(CXX_OBJS)"
        @echo "PREFIX:$(PREFIX)"
        
clean :
        rm -f $(CC_OBJS)  neoleo
        
cleaner : clean
        rm -f *.o 
        #rm -rf build
        find gcm.cache/*.gcm ! -name std.gcm -delete # delete everything in gcm.cach except std.gcm
        
install : neoleo
        install -p neoleo $(PREFIX)/bin 
        
uninstall : 
        rm -f $(PREFIX)/bin/neoleo 
EOM

print FH $top;

while (<DATA>) {
	chomp($_);
	my @deps = split /\s+/,$_;
	my $targ = shift(@deps);
	#my ($targ, @deps) = @arra;
	say("$targ.o : @deps");
	say("\t" . '$(CXX) $(CXXFLAGS) -c $< -o $@' . "\n");
	#my $trg = @_[1]; 
	#say "$trg ";
}


#my $tail = <<'EOM';
#EOM
#print FH $tail;
#close(FH);

__DATA__
basic.cc errors.cxx logging.cxx
cell.cc value.cxx
io-2019.cc errors.cxx logging.cxx win.cxx
io-headless.cc logging.cxx mod.cxx
io-utils.cc errors.cxx logging.cxx value.cxx
main.cc logging.cxx
menu-2025.cc logging.cxx
oleofile.cc
parser-2019.cc
regions.cc
sheet.cc
spans.cc
tests.cc
utils.cc
value.cxx errors.cxx